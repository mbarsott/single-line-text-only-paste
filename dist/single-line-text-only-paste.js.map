{"version":3,"sources":["gutenberg-and-react-code.js","single-line-text-only-paste.js"],"names":["createHigherOrderComponent","wp","compose","useEffect","element","addFilter","hooks","replaceClipboardContent","navigator","clipboard","readText","text","getFirstParagraph","writeText","dropOneTextLineEventHandler","e","preventDefault","dataTransfer","getData","targe","innerText","pasteOneTextLineEventHandler","then","_","catch","error","console","firstLine","split","setGlobalEditorPasteEventListener","gutenbergContainer","document","querySelector","removeEventListener","addEventListener","withClipboardChanges","GutenbergComponent","props","addDropAndPasteEventHandlers","settings","name","attributes","type","default"],"mappings":"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","file":"single-line-text-only-paste.js","sourceRoot":"..\\assets\\js","sourcesContent":["const { createHigherOrderComponent } = wp.compose;\nconst { useEffect } = wp.element;\nconst { addFilter } = wp.hooks;\n// const { getBlocks } = wp.data.select(\"core/block-editor\");\n\n// let blockList = getBlocks();\n\n// wp.data.subscribe(() => {\n// \tconst newBlockList = getBlocks();\n// \tconst isBlockAdded = newBlockList.length > blockList.length;\n\n// \tif (!isBlockAdded) return;\n\n// \tconst addedBlocks = newBlockList.filter((x) => !blockList.includes(x));\n// \tblockList = newBlockList;\n\n// \taddedBlocks.map((blockItem) => {\n// \t\tconst clientId = blockItem.clientId;\n\n// \t\tsetTimeout(function () {\n// \t\t\tconst elem = document.querySelector(`[data-block=\"${clientId}\"]`);\n\n// \t\t\telem.addEventListener(\"paste\", pasteOneTextLineEventHandler);\n\n// \t\t\telem.addEventListener(\"drop\", dropOneTextLineEventHandler);\n// \t\t}, 100);\n// \t});\n// });\n\nasync function replaceClipboardContent() {\n\tlet text = await navigator.clipboard.readText();\n\ttext = getFirstParagraph(text);\n\tawait navigator.clipboard.writeText(text);\n}\n\nfunction dropOneTextLineEventHandler(e) {\n\te.preventDefault();\n\tlet text = e.dataTransfer.getData(\"text/plain\");\n\te.targe.innerText = getFirstParagraph(text);\n}\n\nfunction pasteOneTextLineEventHandler(e) {\n\treplaceClipboardContent()\n\t\t.then((_) => {\n\t\t\treturn;\n\t\t})\n\t\t.catch((error) => console.error(error));\n}\n\nfunction getFirstParagraph(text) {\n\tconst firstLine = text.split(\"\\n\")[0];\n\treturn firstLine ? firstLine : text;\n}\n\nfunction setGlobalEditorPasteEventListener() {\n\tvar gutenbergContainer = document.querySelector(\".is-root-container\");\n\tgutenbergContainer.removeEventListener(\n\t\t\"paste\",\n\t\tpasteOneTextLineEventHandler\n\t);\n\tgutenbergContainer.addEventListener(\"paste\", pasteOneTextLineEventHandler);\n}\n\n/**\n * Create HOC to add spacing control to inspector controls of block.\n */\nconst withClipboardChanges = createHigherOrderComponent(\n\t(GutenbergComponent) => {\n\t\treturn (props) => {\n\t\t\tuseEffect(() => {\n\t\t\t\tsetGlobalEditorPasteEventListener();\n\t\t\t}, []);\n\t\t\treturn (\n\t\t\t\t<GutenbergComponent\n\t\t\t\t\tonPaste={pasteOneTextLineEventHandler()}\n\t\t\t\t\tonDrop={dropOneTextLineEventHandler}\n\t\t\t\t\t{...props}\n\t\t\t\t/>\n\t\t\t);\n\t\t};\n\t},\n\t\"withClipboardChanges\"\n);\n\naddFilter(\n\t\"editor.BlockEdit\",\n\t\"single-line-text-only-paste/with-clipboard-changes\",\n\twithClipboardChanges\n);\n\nconst addDropAndPasteEventHandlers = (settings, name) => {\n\tsettings.attributes[\"onPaste\"] = {\n\t\ttype: \"function\",\n\t\tdefault: pasteOneTextLineEventHandler,\n\t};\n\tsettings.attributes[\"onDrop\"] = {\n\t\ttype: \"function\",\n\t\tdefault: dropOneTextLineEventHandler,\n\t};\n\n\treturn settings;\n};\n\naddFilter(\n\t\"blocks.registerBlockType\",\n\t\"single-line-text-only-paste/event-handlers\",\n\taddDropAndPasteEventHandlers\n);\n","import './gutenberg-and-react-code';\n"]}